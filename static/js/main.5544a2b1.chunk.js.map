{"version":3,"sources":["Task1/store/actionTypes.js","Task1/store/Reducer.js","Task1/store/store.js","Task1/store/action.js","Task1/gallary.js","Task2/Task2.js","index.js"],"names":["initialState","photos","isLoading","error","dataReducer","state","action","type","console","log","payload","data","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","reduxThunk","fetchDataStarted","fetchDataFailed","fetchDataSuccess","Gallary","React","Component","componentDidMount","this","props","fetchData","render","randomTenPics","className","length","i","idx","Math","floor","random","push","url","Container","Col","animationIn","animationOut","isVisible","map","pics","index","key","src","style","height","width","connect","dispatch","axios","get","then","catch","err","message","Taks2","color","shape","updateBg","prevColor","undo","redo","handleChange","target","setState","name","value","changeBg","e","preventDefault","addColor","undoColor","setUndoColor","redoInd","setRedoColor","prev","marginTop","Row","xs","md","Card","alignItems","backgroundColor","marginBottom","Body","background","borderRadius","marginLeft","Select","onChange","onBlur","MenuItem","htmlFor","TextField","id","label","variant","Button","margin","onClick","fontSize","App","Task2","document","getElementById"],"mappings":"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","file":"static/js/main.5544a2b1.chunk.js","sourcesContent":["export const FETCH_PICS_STARTED = 'FETCH_PICS_STARTED'\r\nexport const FETCH_PICS_FAILED = 'FETCH_PICS_FAILED'\r\nexport const FETCH_PICS_SUCCESS = 'FETCH_PICS_SUCCESS'","import {\r\n  FETCH_PICS_STARTED,\r\n  FETCH_PICS_FAILED,\r\n  FETCH_PICS_SUCCESS,\r\n} from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  photos: [],\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_PICS_STARTED:\r\n      console.log(\"loading\");\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case FETCH_PICS_SUCCESS:\r\n      console.log(\"payload\", action.payload.data);\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        isLoading: false,\r\n        photos: action.payload.data,\r\n      };\r\n    case FETCH_PICS_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import {\r\n    createStore,\r\n    compose,\r\n    applyMiddleware,\r\n    combineReducers\r\n} from \"redux\";\r\n\r\nimport reduxThunk from \"redux-thunk\";\r\nimport dataReducer from \"./Reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    photos: dataReducer,\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nexport default store;","import {\r\n  FETCH_PICS_FAILED,\r\n  FETCH_PICS_STARTED,\r\n  FETCH_PICS_SUCCESS,\r\n} from \"./actionTypes\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const fetchData = () => {\r\n  console.log(\"fetch function\");\r\n  return (dispatch) => {\r\n    dispatch(fetchDataStarted());\r\n    console.log(\"axios\");\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/photos\")\r\n      .then(({ data }) => {\r\n        dispatch(fetchDataSuccess(data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(fetchDataFailed(err.message));\r\n      });\r\n  };\r\n};\r\nconst fetchDataStarted = () => {\r\n  console.log(\"starded\");\r\n  return {\r\n    type: FETCH_PICS_STARTED,\r\n    payload: {\r\n      isLoading: true,\r\n    },\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (error) => {\r\n  //   console.log(\"error\", error);\r\n  return {\r\n    type: FETCH_PICS_FAILED,\r\n    payload: {\r\n      error,\r\n    },\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (data) => {\r\n  //   console.log(\"data\", data);\r\n  return {\r\n    type: FETCH_PICS_SUCCESS,\r\n    payload: {\r\n      data,\r\n    },\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchData } from \"./store/action\";\r\nimport { Animated } from \"react-animated-css\";\r\n\r\nimport Row from \"react-bootstrap\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport \"./Task1.css\";\r\n\r\nclass Gallary extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchData();\r\n  }\r\n\r\n  render() {\r\n    const { photos, isLoading } = this.props;\r\n    var randomTenPics = [];\r\n    if (isLoading) {\r\n      return <h2 className=\"Loader\"> </h2>;\r\n    }\r\n    if (photos.length) {\r\n      for (var i = 0; i < 10; i++) {\r\n        var idx = Math.floor(Math.random() * photos.length);\r\n        randomTenPics.push(photos[idx].url);\r\n      }\r\n    }\r\n    return (\r\n      <Container>\r\n        <div className=\"row\">\r\n          <Col>\r\n            <Animated\r\n              animationIn=\"animate__shakeY\"\r\n              animationOut=\"infinite\"\r\n              isVisible={true}\r\n            >\r\n              <h2> Random 10 pics Gallary </h2>{\" \"}\r\n            </Animated>{\" \"}\r\n            <div>\r\n              {\" \"}\r\n              {randomTenPics.map((pics, index) => (\r\n                <img\r\n                  key={index}\r\n                  src={pics}\r\n                  style={{\r\n                    height: \"100px\",\r\n                    width: \"100px\",\r\n                  }}\r\n                />\r\n              ))}{\" \"}\r\n            </div>{\" \"}\r\n          </Col>{\" \"}\r\n        </div>{\" \"}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    photos: state.photos.photos,\r\n    isLoading: state.photos.isLoading,\r\n    error: state.photos.error,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchData,\r\n})(Gallary);\r\n","import React from \"react\";\r\nimport RedoIcon from \"@material-ui/icons/Redo\";\r\nimport UndoIcon from \"@material-ui/icons/Undo\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n// import Card from \"@material-ui/core/Card\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./style.css\";\r\n\r\nclass Taks2 extends React.Component {\r\n  state = {\r\n    color: \"red\",\r\n    shape: \"circle\",\r\n    updateBg: \"red\",\r\n    prevColor: [],\r\n    undo: 0,\r\n    redo: 0,\r\n  };\r\n  handleChange = ({ target }) => {\r\n    this.setState({\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n  changeBg = (e) => {\r\n    e.preventDefault();\r\n    let prevColor = this.state.prevColor;\r\n    let addColor = this.state.color;\r\n    let undo = this.state.undo + 1;\r\n    prevColor.push(addColor);\r\n    this.setState({\r\n      updateBg: this.state.color,\r\n      prevColor: prevColor,\r\n      undo: undo,\r\n    });\r\n  };\r\n  undo = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state.prevColor);\r\n    console.log(this.state.undo);\r\n    let undoColor = this.state.undo;\r\n    if (undoColor < 0) {\r\n      undoColor = 0;\r\n    }\r\n    let setUndoColor = this.state.prevColor[undoColor - 2];\r\n    // console.log(\"index\", undoColor);\r\n    // console.log(\"color\", setUndoColor);\r\n    this.setState({\r\n      updateBg: setUndoColor,\r\n      undo: undoColor - 1,\r\n    });\r\n  };\r\n  redo = (e) => {\r\n    e.preventDefault();\r\n    let redoInd = this.state.undo + 1;\r\n    console.log(\"redo\", redoInd);\r\n    let setRedoColor = this.state.prevColor[redoInd + 1];\r\n    this.setState({\r\n      updateBg: setRedoColor,\r\n      undo: this.state.undo + 1,\r\n    });\r\n  };\r\n  render() {\r\n    const { color, shape, updateBg, prevColor } = this.state;\r\n    // console.log(prevColor);\r\n    var prev = [];\r\n    var show = false;\r\n    for (var i = prevColor.length - 1; i >= prevColor.length - 3; i--) {\r\n      prev.push(prevColor[i]);\r\n    }\r\n    // console.log(prev);\r\n    if (prev.length) {\r\n      show = true;\r\n    }\r\n    return (\r\n      <Container\r\n        style={{\r\n          marginTop: \"130px\",\r\n        }}\r\n      >\r\n        <Row>\r\n          <Col xs={12} md={6}>\r\n            <Card\r\n              style={{\r\n                alignItems: \"center\",\r\n                backgroundColor: \"#F0F8FF\",\r\n                marginBottom: \"15px\",\r\n              }}\r\n            >\r\n              <Card.Body>\r\n                {\" \"}\r\n                {shape === \"circle\" && updateBg ? (\r\n                  <div\r\n                    className=\"circle\"\r\n                    style={{\r\n                      background: `${updateBg}`,\r\n                      borderRadius: \"50%\",\r\n                      width: \"200px\",\r\n                      height: \"200px\",\r\n                    }}\r\n                  >\r\n                    <h3> {updateBg} </h3>{\" \"}\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                    className=\"circle\"\r\n                    style={{\r\n                      background: `${updateBg}`,\r\n                      width: \"200px\",\r\n                      height: \"200px\",\r\n                    }}\r\n                  >\r\n                    <h3> {updateBg} </h3>{\" \"}\r\n                  </div>\r\n                )}{\" \"}\r\n                <br />{\" \"}\r\n                {prev.map((color, i) => (\r\n                  <div\r\n                    className=\"prev\"\r\n                    key={i}\r\n                    style={{\r\n                      background: `${color}`,\r\n                      width: \"50px\",\r\n                      height: \"50px\",\r\n                      marginLeft: \"78px\",\r\n                    }}\r\n                  ></div>\r\n                ))}{\" \"}\r\n              </Card.Body>{\" \"}\r\n            </Card>{\" \"}\r\n          </Col>{\" \"}\r\n          <br />\r\n          <br />\r\n          <Col xs={12} md={6}>\r\n            <form>\r\n              <Card\r\n                style={{\r\n                  backgroundColor: \"#F0F8FF\",\r\n                }}\r\n              >\r\n                <Card.Body>\r\n                  <Select\r\n                    style={{\r\n                      marginLeft: \"50px\",\r\n                      marginBottom: \"15px\",\r\n                    }}\r\n                    value={shape}\r\n                    onChange={(e) =>\r\n                      this.setState({\r\n                        shape: e.target.value,\r\n                      })\r\n                    }\r\n                    onBlur={(e) =>\r\n                      this.setState({\r\n                        shape: e.target.value,\r\n                      })\r\n                    }\r\n                  >\r\n                    <MenuItem value=\"circle\"> Circle </MenuItem>{\" \"}\r\n                    <MenuItem value=\"square\"> Square </MenuItem>{\" \"}\r\n                  </Select>{\" \"}\r\n                  <label htmlFor=\"color\">\r\n                    <TextField\r\n                      style={{\r\n                        marginTop: \"15px\",\r\n                        marginLeft: \"50px\",\r\n                        marginBottom: \"20px\",\r\n                      }}\r\n                      id=\"outlined-basic\"\r\n                      label=\"Color Code\"\r\n                      variant=\"outlined\"\r\n                      type=\"text\"\r\n                      value={this.state.color}\r\n                      name=\"color\"\r\n                      onChange={this.handleChange}\r\n                    />{\" \"}\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      style={{\r\n                        backgroundColor: `${this.state.color}`,\r\n                        margin: \"0 100px 10px\",\r\n                      }}\r\n                      onClick={this.changeBg}\r\n                    >\r\n                      Update Color{\" \"}\r\n                    </Button>{\" \"}\r\n                  </label>{\" \"}\r\n                  <button\r\n                    onClick={this.undo}\r\n                    style={{\r\n                      marginLeft: \"49px\",\r\n                    }}\r\n                  >\r\n                    <UndoIcon\r\n                      style={{\r\n                        fontSize: \"40px\",\r\n                      }}\r\n                    ></UndoIcon>{\" \"}\r\n                  </button>{\" \"}\r\n                  <button onClick={this.redo}>\r\n                    <RedoIcon\r\n                      style={{\r\n                        fontSize: \"40px\",\r\n                      }}\r\n                    >\r\n                      UndoIcon{\" \"}\r\n                    </RedoIcon>{\" \"}\r\n                  </button>{\" \"}\r\n                </Card.Body>{\" \"}\r\n              </Card>{\" \"}\r\n            </form>{\" \"}\r\n          </Col>{\" \"}\r\n        </Row>{\" \"}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Taks2;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\n\r\n//Redux Stuff\r\nimport store from \"./Task1/store/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\n//Assignment Stuff\r\nimport Task1 from \"./Task1/gallary\";\r\nimport Task2 from \"./Task2/Task2\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      {\" \"}\r\n      <Task1 />\r\n      <Task2 />{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}