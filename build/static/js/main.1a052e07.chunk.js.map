{"version":3,"sources":["Task1/store/actionTypes.js","Task1/store/Reducer.js","Task1/store/store.js","Task1/store/action.js","Task1/gallary.js","Task2/Task2.js","index.js"],"names":["initialState","photos","isLoading","error","dataReducer","state","action","type","console","log","payload","data","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","reduxThunk","fetchDataStarted","fetchDataFailed","fetchDataSuccess","Gallary","React","Component","componentDidMount","this","props","fetchData","render","randomTenPics","length","i","idx","Math","floor","random","push","url","className","map","pics","index","key","src","style","height","width","connect","dispatch","axios","get","then","catch","err","message","Taks2","color","shape","updateBg","prevColor","handleChange","target","setState","name","value","changeBg","e","preventDefault","addColor","undo","prev","background","borderRadius","onChange","onBlur","htmlFor","backgroundColor","margin","onClick","fontSize","App","Task2","document","getElementById"],"mappings":"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","file":"static/js/main.1a052e07.chunk.js","sourcesContent":["export const FETCH_PICS_STARTED = 'FETCH_PICS_STARTED'\r\nexport const FETCH_PICS_FAILED = 'FETCH_PICS_FAILED'\r\nexport const FETCH_PICS_SUCCESS = 'FETCH_PICS_SUCCESS'","import {\r\n  FETCH_PICS_STARTED,\r\n  FETCH_PICS_FAILED,\r\n  FETCH_PICS_SUCCESS,\r\n} from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  photos: [],\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_PICS_STARTED:\r\n      console.log(\"loading\");\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case FETCH_PICS_SUCCESS:\r\n      console.log(\"payload\", action.payload.data);\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        isLoading: false,\r\n        photos: action.payload.data,\r\n      };\r\n    case FETCH_PICS_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import {\r\n    createStore,\r\n    compose,\r\n    applyMiddleware,\r\n    combineReducers\r\n} from \"redux\";\r\n\r\nimport reduxThunk from \"redux-thunk\";\r\nimport dataReducer from \"./Reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    photos: dataReducer,\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nexport default store;","import {\r\n  FETCH_PICS_FAILED,\r\n  FETCH_PICS_STARTED,\r\n  FETCH_PICS_SUCCESS,\r\n} from \"./actionTypes\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const fetchData = () => {\r\n  console.log(\"fetch function\");\r\n  return (dispatch) => {\r\n    dispatch(fetchDataStarted());\r\n    console.log(\"axios\");\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/photos\")\r\n      .then(({ data }) => {\r\n        dispatch(fetchDataSuccess(data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(fetchDataFailed(err.message));\r\n      });\r\n  };\r\n};\r\nconst fetchDataStarted = () => {\r\n  console.log(\"starded\");\r\n  return {\r\n    type: FETCH_PICS_STARTED,\r\n    payload: {\r\n      isLoading: true,\r\n    },\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (error) => {\r\n  //   console.log(\"error\", error);\r\n  return {\r\n    type: FETCH_PICS_FAILED,\r\n    payload: {\r\n      error,\r\n    },\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (data) => {\r\n  //   console.log(\"data\", data);\r\n  return {\r\n    type: FETCH_PICS_SUCCESS,\r\n    payload: {\r\n      data,\r\n    },\r\n  };\r\n};\r\n","import React from \"react\";\r\n// import axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchData } from \"./store/action\";\r\n\r\nclass Gallary extends React.Component {\r\n  // state = {\r\n  //   photos: [],\r\n  //   isloading: true,\r\n  // };\r\n  componentDidMount() {\r\n    // axios\r\n    //   .get(\"https://jsonplaceholder.typicode.com/photos\")\r\n    //   .then(({ data }) => {\r\n    //     this.setState({\r\n    //       photos: data,\r\n    //       isloading: false,\r\n    //     });\r\n    //   });\r\n    console.log(\"i m mount\");\r\n    this.props.fetchData();\r\n  }\r\n\r\n  render() {\r\n    const { photos, isLoading } = this.props;\r\n    // console.log(\"props\", this.props);\r\n    console.log(\"photos\", this.props);\r\n    var randomTenPics = [];\r\n    if (isLoading) {\r\n      return <h2> Loading. </h2>;\r\n    }\r\n    if (photos.length) {\r\n      for (var i = 0; i < 10; i++) {\r\n        var idx = Math.floor(Math.random() * photos.length);\r\n        // console.log(idx);\r\n        randomTenPics.push(photos[idx].url);\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"carousel\">\r\n        <h2> Random 10 pics Gallary </h2>{\" \"}\r\n        {randomTenPics.map((pics, index) => (\r\n          <img\r\n            key={index}\r\n            src={pics}\r\n            style={{\r\n              height: \"100px\",\r\n              width: \"100px\",\r\n            }}\r\n          />\r\n        ))}{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    photos: state.photos.photos,\r\n    isLoading: state.photos.isLoading,\r\n    error: state.photos.error,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchData,\r\n})(Gallary);\r\n","import React from \"react\";\r\nimport RedoIcon from \"@material-ui/icons/Redo\";\r\nimport UndoIcon from \"@material-ui/icons/Undo\";\r\nimport \"./style.css\";\r\n\r\nclass Taks2 extends React.Component {\r\n  state = {\r\n    color: \"red\",\r\n    shape: \"circle\",\r\n    updateBg: \"red\",\r\n    prevColor: [],\r\n  };\r\n  handleChange = ({ target }) => {\r\n    this.setState({\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n  changeBg = (e) => {\r\n    e.preventDefault();\r\n    let prevColor = this.state.prevColor;\r\n    let addColor = this.state.color;\r\n    prevColor.push(addColor);\r\n    this.setState({\r\n      updateBg: this.state.color,\r\n      prevColor: prevColor,\r\n    });\r\n  };\r\n  undo = (e) => {\r\n    console.log(\"undo here\");\r\n  };\r\n  render() {\r\n    const { color, shape, updateBg, prevColor } = this.state;\r\n    // console.log(prevColor);\r\n    var prev = [];\r\n    var show = false;\r\n    for (var i = prevColor.length - 1; i >= prevColor.length - 3; i--) {\r\n      prev.push(prevColor[i]);\r\n    }\r\n    // console.log(prev);\r\n    if (prev.length) {\r\n      show = true;\r\n    }\r\n    return (\r\n      <div className=\"task2\">\r\n        {\" \"}\r\n        <div className=\"panel1\">\r\n          {shape === \"circle\" && updateBg ? (\r\n            <div\r\n              className=\"circle\"\r\n              style={{\r\n                background: `${updateBg}`,\r\n                borderRadius: \"50%\",\r\n                width: \"200px\",\r\n                height: \"200px\",\r\n              }}\r\n            >\r\n              <h3> {updateBg} </h3>{\" \"}\r\n            </div>\r\n          ) : (\r\n            <div\r\n              className=\"circle\"\r\n              style={{\r\n                background: `${updateBg}`,\r\n                width: \"200px\",\r\n                height: \"200px\",\r\n              }}\r\n            >\r\n              <h3> {updateBg} </h3>{\" \"}\r\n            </div>\r\n          )}{\" \"}\r\n          <br />{\" \"}\r\n          {prev.map((color, i) => (\r\n            <div\r\n              className=\"prev\"\r\n              key={i}\r\n              style={{\r\n                background: `${color}`,\r\n                width: \"50px\",\r\n                height: \"50px\",\r\n              }}\r\n            ></div>\r\n          ))}{\" \"}\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <div className=\"search-params panel2\">\r\n          <form>\r\n            <select\r\n              value={shape}\r\n              onChange={(e) =>\r\n                this.setState({\r\n                  shape: e.target.value,\r\n                })\r\n              }\r\n              onBlur={(e) =>\r\n                this.setState({\r\n                  shape: e.target.value,\r\n                })\r\n              }\r\n            >\r\n              <option value=\"circle\"> Circle </option>{\" \"}\r\n              <option value=\"square\"> Square </option>{\" \"}\r\n              <option value=\"rectangle\"> Rectangle </option>{\" \"}\r\n            </select>{\" \"}\r\n            <label htmlFor=\"color\">\r\n              setBackground Color{\" \"}\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.color}\r\n                name=\"color\"\r\n                onChange={this.handleChange}\r\n              />{\" \"}\r\n              <button\r\n                style={{\r\n                  backgroundColor: `${this.state.color}`,\r\n                  margin: \"0 100px 10px\",\r\n                }}\r\n                onClick={this.changeBg}\r\n              >\r\n                Update Color{\" \"}\r\n              </button>{\" \"}\r\n            </label>{\" \"}\r\n            <button onClick={this.undo}>\r\n              <UndoIcon\r\n                style={{\r\n                  fontSize: \"40px\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n              </UndoIcon>{\" \"}\r\n            </button>{\" \"}\r\n            <button>\r\n              <RedoIcon\r\n                style={{\r\n                  fontSize: \"40px\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                UndoIcon{\" \"}\r\n              </RedoIcon>{\" \"}\r\n            </button>{\" \"}\r\n          </form>{\" \"}\r\n        </div>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Taks2;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\n\r\n//Redux Stuff\r\nimport store from \"./Task1/store/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\n//Assignment Stuff\r\nimport Task1 from \"./Task1/gallary\";\r\nimport Task2 from \"./Task2/Task2\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Task1 />\r\n      <Task2 />\r\n    </div>\r\n  );\r\n};\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}